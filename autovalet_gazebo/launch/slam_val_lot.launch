<?xml version="1.0"?>
<!--
Software License Agreement (BSD)

\file      husky_playpen.launch
\authors   Paul Bovbel <pbovbel@clearpathrobotics.com
\copyright Copyright (c) 2015, Clearpath Robotics, Inc., All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that
the following conditions are met:
 * Redistributions of source code must retain the above copyright notice, this list of conditions and the
   following disclaimer.
 * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
   following disclaimer in the documentation and/or other materials provided with the distribution.
 * Neither the name of Clearpath Robotics nor the names of its contributors may be used to endorse or promote
   products derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WAR-
RANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, IN-
DIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->

<launch>
  <env name="GAZEBO_MODEL_PATH" value="$(find autovalet_gazebo)/models:$(optenv GAZEBO_MODEL_PATH)" />
	<!-- Include autovalet description with simulation true as this is a gazebo launcher -->
  <include file="$(find autovalet_description)/launch/autovalet_description.launch">
    <arg name="simulation" value="true"/>
  </include>

  <!-- Launch CMU parking plane world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find autovalet_gazebo)/worlds/slam_val.world"/> 
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <!-- Spawn husky in the world -->
  <arg name="x" default="-18"/>
  <arg name="y" default="-9"/>
  <arg name="z" default="0.0"/>
  <arg name="yaw" default="0.0"/>
  <arg name="robot_namespace" default="/"/>

  <node name="spawn_husky_model" pkg="gazebo_ros" type="spawn_model"
        args="-x $(arg x)
              -y $(arg y)
              -z $(arg z)
              -Y $(arg yaw)
              -unpause
              -urdf
              -param robot_description
              -model $(arg robot_namespace)"/>
  
  <!-- Setup husky's robot state publisher and velocity controller -->
  <rosparam command="load" file="$(find husky_control)/config/control.yaml" />
  <!-- Spawn controller : Reference husky_control package-->
  <node name="base_controller_spawner" pkg="controller_manager" type="spawner" args="husky_joint_publisher husky_velocity_controller"/>
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />

  <node pkg="twist_mux" type="twist_mux" name="twist_mux">
    <rosparam command="load" file="$(find husky_control)/config/twist_mux.yaml" />
    <remap from="cmd_vel_out" to="husky_velocity_controller/cmd_vel"/>
  </node>
  
  <!-- Start EKF for localization -->
  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization">
    <!--rosparam command="load" file="$(find husky_control)/config/localization.yaml" /-->
    <rosparam command="load" file="$(find autovalet_gazebo)/config/localization.yaml" />
  </node>

  <!-- Launch joystick/keyboard teleop for husky based on command line argument joystick:=[true/false] 
       if you don't specify the command line parameter, joystick param defaults to false -->
  <arg name="joystick" default="false"/>
  <group if="$(arg joystick)">
    <include file="$(find valet_husky)/launch/teleop.launch" />
  </group>
  <group unless="$(arg joystick)">
    <node name="teleop" pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" output="screen" />
  </group>
  <remap from="cmd_vel" to="husky_velocity_controller/cmd_vel"/>

  <!-- node for combining depth pcl and lidar pcl -->
  <node pkg="autovalet_gazebo" type="concat_pcl" name="concat_pcl" />

  <!-- RVIZ -->
  <node type="rviz" name="rviz" pkg="rviz" args="-d $(find autovalet_gazebo)/config/husky_gazebo_lot.rviz" />
  
</launch>
